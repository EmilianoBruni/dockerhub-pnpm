# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#
# AUTHORS :  <%= $global->{author}->{name} . ' (' . $global->{author}->{abbr} . ') <' . $global->{author}->{mail} . '>' %>
# DATE    :  <%= $docker->{history}->[0]->{date} %>
# PURPOSE :
#   <%= $global->{description} %>
#
#   This image is published in docker hub with handle: <%= $docker->{image} %>
#
# USAGE:
#   docker build -t <%= $docker->{project} %> .
#
# UPDATES:
#   AUTHOR  DATE        VER  COMMENTS
% for ($docker->{history}->@*) {
#   <%= $global->{author}->{abbr} %>      <%= $_->{date} %>  <%= $_->{version} %>  <%= $_->{comment} %>
% }
#
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#
%= $warning
FROM <%= $release->{$from} || $from %>
LABEL maintainer="<%= $global->{author}->{name} . ' <' . $global->{author}->{mail} . '>' %>"
%   for my $itm ($global->{env}->@*) {
%     for my $key (sort keys $itm->%*) {
ENV <%= "$key=$itm->{$key}" %>
%   }
% }

%= 'EXPOSE '. $global->{publish} if ($global->{publish});

RUN apk add --no-cache \\
% for ($global->{os_packages}->@*) {
    <%= $_ %> \\
% }
% if ($release->{env}) {
%   for my $key (sort keys $release->{env}->%*) {
ENV <%= "$key=$release->{env}{$key}" %>
%   }
% }
% if ($release->{packages}) {
 && apk add --no-cache \\
%   for ($release->{packages}->@*) {
    <%= $_ %> \\
%   }
% }
  # update corepack to latest version
  && npm install -g corepack \\
  && corepack enable \\
  # change node group and user id
  # && usermod -u 1001 node && groupmod -g 1001 node \\
  # add node tu sudoers
  && echo '%node ALL=(ALL) NOPASSWD: ALL' > /etc/sudoers.d/node \\
  && su -c "pnpm set store-dir ${PNPM_HOME}/store" node \\
% if ($global->{os_packages_clear} || $release->{os_packages_clear}) {
  && apk del \\
%   for ($global->{os_packages_clear}->@*) {
    <%= $_ %> \\
%   }
%   for ($release->{os_packages_clear}->@*) {
    <%= $_ %> \\
%   }
% }
  && rm -rf /var/cache/apk/* \\
  && rm -rf /tmp/* \\
  && true

COPY color_prompt.sh /etc/profile.d/color_prompt.sh
COPY entrypoint.sh /

USER node

WORKDIR <%= $global->{app_folder} %>

%= $labels

ENTRYPOINT ["/sbin/tini", "--", "/entrypoint.sh"]
CMD ["/bin/ash"]
